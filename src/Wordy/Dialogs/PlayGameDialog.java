/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Wordy.Dialogs;

import Wordy.DatabaseManager;
import Wordy.Entities.Word;
import Wordy.Repositories.WordRepository;
import com.j256.ormlite.support.ConnectionSource;

import javax.swing.*;
import java.util.ArrayList;
import java.util.Arrays;

/**
 *
 * @author pipe
 */
public class PlayGameDialog extends javax.swing.JFrame {

    Boolean isPlaying = false;
    Word currentWord;
    Integer lives = 0;

    char[] currentWordLetters;

    ArrayList<String> correctLetters = new ArrayList<String>();
    ArrayList<String> incorrectLetters = new ArrayList<String>();
    String maskedWord;

    /**
     * Creates new form PlayGameDIalog
     */
    public PlayGameDialog() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ValueField = new javax.swing.JTextField();
        WordField = new javax.swing.JTextField();
        TryButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        CorrectWordList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        IncorrectWordList = new javax.swing.JList<>();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        Lifes = new javax.swing.JLabel();
        PlayGameButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ValueField.setEnabled(false);

        WordField.setEditable(false);
        WordField.setEnabled(false);

        TryButton.setText("Try");
        TryButton.setEnabled(false);
        TryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TryButtonActionPerformed(evt);
            }
        });

        CorrectWordList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(CorrectWordList);

        jTabbedPane1.addTab("Correct", jScrollPane1);

        IncorrectWordList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(IncorrectWordList);

        jTabbedPane1.addTab("Incorrect", jScrollPane2);

        jLabel1.setText("Lifes");

        Lifes.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        Lifes.setText("0");

        PlayGameButton.setText("New Game");
        PlayGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayGameButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Lifes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PlayGameButton))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                    .addComponent(WordField)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ValueField, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addComponent(TryButton))
                    .addComponent(jSeparator1))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Lifes)
                    .addComponent(PlayGameButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ValueField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TryButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(WordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PlayGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayGameButtonActionPerformed
        try {
            ConnectionSource connectionSource = DatabaseManager.getConnection();
            WordRepository wordRepository = new WordRepository(connectionSource);

            isPlaying = true;
            currentWord = wordRepository.random();
            lives = currentWord.getValue().length();

            currentWordLetters = currentWord.getValue().toCharArray();

            maskedWord = currentWord.getValue().replaceAll("[^\\W\\d_]", "_");

            StartGame();

            WordField.setText(maskedWord);

            Lifes.setText(String.valueOf(lives));

            System.out.println(currentWord.getValue());

            connectionSource.close();
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }//GEN-LAST:event_PlayGameButtonActionPerformed

    private void TryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TryButtonActionPerformed
        if (ValueField.getText() == null) {
            JOptionPane.showMessageDialog(this, "You must enter a letter.");
            return;
        }

        if (lives == 0) {
            JOptionPane.showMessageDialog(this, "You have no more lives.");
            return;
        }

        if (ValueField.getText().length() > 1) {
            JOptionPane.showMessageDialog(this, "You can only try one letter at a time.");
            return;
        }


        if (!Arrays.toString(currentWordLetters).toLowerCase().contains(ValueField.getText().toLowerCase())) {
            lives--;
            Lifes.setText(String.valueOf(lives));

            if (lives == 0) {
                JOptionPane.showMessageDialog(this, "You have no more lifes.");
                StopGame();
                return;
            }

            if (incorrectLetters.contains(ValueField.getText())) {
                JOptionPane.showMessageDialog(this, "You have already tried this letter.");
                ValueField.setText("");
                return;
            }

            incorrectLetters.add(ValueField.getText());

            IncorrectWordList.setModel(new javax.swing.AbstractListModel<String>() {
                final String[] strings = incorrectLetters.toArray(new String[0]);
                public int getSize() { return strings.length; }
                public String getElementAt(int i) { return strings[i]; }
            });

            JOptionPane.showMessageDialog(this, "Incorrect letter.");

            ValueField.setText("");
            return;
        }

        for (int i = 0; i < currentWordLetters.length; i++) {
            if (Character.toLowerCase(currentWordLetters[i]) == ValueField.getText().toLowerCase().charAt(0)) {
                maskedWord = maskedWord.substring(0, i) + ValueField.getText().charAt(0) + maskedWord.substring(i + 1);
            }
        }

        correctLetters.add(ValueField.getText());
        ValueField.setText("");
        WordField.setText(maskedWord);


        CorrectWordList.setModel(new javax.swing.AbstractListModel<String>() {
            final String[] strings = correctLetters.toArray(new String[0]);
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });

        if (!maskedWord.contains("_")) {
            isPlaying = false;
            StopGame();
            JOptionPane.showMessageDialog(this, "You won!");
        }

    }//GEN-LAST:event_TryButtonActionPerformed

    private void StartGame() {
        TryButton.setEnabled(true);
        ValueField.setText("");
        ValueField.setEnabled(true);
        WordField.setEnabled(true);
    }

    private void StopGame() {
        TryButton.setEnabled(false);
        ValueField.setText("");
        ValueField.setEnabled(false);
        WordField.setEnabled(false);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlayGameDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlayGameDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlayGameDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlayGameDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlayGameDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> CorrectWordList;
    private javax.swing.JList<String> IncorrectWordList;
    private javax.swing.JLabel Lifes;
    private javax.swing.JButton PlayGameButton;
    private javax.swing.JButton TryButton;
    private javax.swing.JTextField ValueField;
    private javax.swing.JTextField WordField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
